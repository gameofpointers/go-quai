// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.25.1
// source: core/types/proto_block.proto

package types

import (
	common "github.com/dominant-strategies/go-quai/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This file defines all the ProtoBuf definitions related to core
type ProtoBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ProtoHeader `protobuf:"bytes,1,opt,name=header,proto3,oneof" json:"header,omitempty"`
	Body   *ProtoBody   `protobuf:"bytes,2,opt,name=body,proto3,oneof" json:"body,omitempty"`
}

func (x *ProtoBlock) Reset() {
	*x = ProtoBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBlock) ProtoMessage() {}

func (x *ProtoBlock) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBlock.ProtoReflect.Descriptor instead.
func (*ProtoBlock) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoBlock) GetHeader() *ProtoHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ProtoBlock) GetBody() *ProtoBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type ProtoBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs      *ProtoTransactions `protobuf:"bytes,1,opt,name=txs,proto3,oneof" json:"txs,omitempty"`
	Uncles   *ProtoHeaders      `protobuf:"bytes,2,opt,name=uncles,proto3,oneof" json:"uncles,omitempty"`
	Etxs     *ProtoTransactions `protobuf:"bytes,3,opt,name=etxs,proto3,oneof" json:"etxs,omitempty"`
	Manifest *ProtoManifest     `protobuf:"bytes,4,opt,name=manifest,proto3,oneof" json:"manifest,omitempty"`
}

func (x *ProtoBody) Reset() {
	*x = ProtoBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBody) ProtoMessage() {}

func (x *ProtoBody) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBody.ProtoReflect.Descriptor instead.
func (*ProtoBody) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoBody) GetTxs() *ProtoTransactions {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *ProtoBody) GetUncles() *ProtoHeaders {
	if x != nil {
		return x.Uncles
	}
	return nil
}

func (x *ProtoBody) GetEtxs() *ProtoTransactions {
	if x != nil {
		return x.Etxs
	}
	return nil
}

func (x *ProtoBody) GetManifest() *ProtoManifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

type ProtoHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentHash    []*common.ProtoHash   `protobuf:"bytes,1,rep,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	UncleHash     *common.ProtoHash     `protobuf:"bytes,2,opt,name=uncle_hash,json=uncleHash,proto3,oneof" json:"uncle_hash,omitempty"`
	Coinbase      []byte                `protobuf:"bytes,3,opt,name=coinbase,proto3,oneof" json:"coinbase,omitempty"`
	Root          *common.ProtoHash     `protobuf:"bytes,4,opt,name=root,proto3,oneof" json:"root,omitempty"`
	TxHash        *common.ProtoHash     `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3,oneof" json:"tx_hash,omitempty"`
	EtxHash       *common.ProtoHash     `protobuf:"bytes,6,opt,name=etx_hash,json=etxHash,proto3,oneof" json:"etx_hash,omitempty"`
	EtxRollupHash *common.ProtoHash     `protobuf:"bytes,7,opt,name=etx_rollup_hash,json=etxRollupHash,proto3,oneof" json:"etx_rollup_hash,omitempty"`
	ManifestHash  []*common.ProtoHash   `protobuf:"bytes,8,rep,name=manifest_hash,json=manifestHash,proto3" json:"manifest_hash,omitempty"`
	ReceiptHash   *common.ProtoHash     `protobuf:"bytes,9,opt,name=receipt_hash,json=receiptHash,proto3,oneof" json:"receipt_hash,omitempty"`
	Difficulty    []byte                `protobuf:"bytes,10,opt,name=difficulty,proto3,oneof" json:"difficulty,omitempty"`
	ParentEntropy [][]byte              `protobuf:"bytes,11,rep,name=parent_entropy,json=parentEntropy,proto3" json:"parent_entropy,omitempty"`
	ParentDeltaS  [][]byte              `protobuf:"bytes,12,rep,name=parent_delta_s,json=parentDeltaS,proto3" json:"parent_delta_s,omitempty"`
	Number        [][]byte              `protobuf:"bytes,13,rep,name=number,proto3" json:"number,omitempty"`
	GasLimit      *uint64               `protobuf:"varint,14,opt,name=gas_limit,json=gasLimit,proto3,oneof" json:"gas_limit,omitempty"`
	GasUsed       *uint64               `protobuf:"varint,15,opt,name=gas_used,json=gasUsed,proto3,oneof" json:"gas_used,omitempty"`
	BaseFee       []byte                `protobuf:"bytes,16,opt,name=base_fee,json=baseFee,proto3,oneof" json:"base_fee,omitempty"`
	Location      *common.ProtoLocation `protobuf:"bytes,17,opt,name=location,proto3,oneof" json:"location,omitempty"`
	Time          *uint64               `protobuf:"varint,18,opt,name=time,proto3,oneof" json:"time,omitempty"`
	Extra         []byte                `protobuf:"bytes,19,opt,name=extra,proto3,oneof" json:"extra,omitempty"`
	MixHash       *common.ProtoHash     `protobuf:"bytes,20,opt,name=mix_hash,json=mixHash,proto3,oneof" json:"mix_hash,omitempty"`
	Nonce         *uint64               `protobuf:"varint,21,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`
}

func (x *ProtoHeader) Reset() {
	*x = ProtoHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoHeader) ProtoMessage() {}

func (x *ProtoHeader) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoHeader.ProtoReflect.Descriptor instead.
func (*ProtoHeader) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoHeader) GetParentHash() []*common.ProtoHash {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *ProtoHeader) GetUncleHash() *common.ProtoHash {
	if x != nil {
		return x.UncleHash
	}
	return nil
}

func (x *ProtoHeader) GetCoinbase() []byte {
	if x != nil {
		return x.Coinbase
	}
	return nil
}

func (x *ProtoHeader) GetRoot() *common.ProtoHash {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *ProtoHeader) GetTxHash() *common.ProtoHash {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *ProtoHeader) GetEtxHash() *common.ProtoHash {
	if x != nil {
		return x.EtxHash
	}
	return nil
}

func (x *ProtoHeader) GetEtxRollupHash() *common.ProtoHash {
	if x != nil {
		return x.EtxRollupHash
	}
	return nil
}

func (x *ProtoHeader) GetManifestHash() []*common.ProtoHash {
	if x != nil {
		return x.ManifestHash
	}
	return nil
}

func (x *ProtoHeader) GetReceiptHash() *common.ProtoHash {
	if x != nil {
		return x.ReceiptHash
	}
	return nil
}

func (x *ProtoHeader) GetDifficulty() []byte {
	if x != nil {
		return x.Difficulty
	}
	return nil
}

func (x *ProtoHeader) GetParentEntropy() [][]byte {
	if x != nil {
		return x.ParentEntropy
	}
	return nil
}

func (x *ProtoHeader) GetParentDeltaS() [][]byte {
	if x != nil {
		return x.ParentDeltaS
	}
	return nil
}

func (x *ProtoHeader) GetNumber() [][]byte {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *ProtoHeader) GetGasLimit() uint64 {
	if x != nil && x.GasLimit != nil {
		return *x.GasLimit
	}
	return 0
}

func (x *ProtoHeader) GetGasUsed() uint64 {
	if x != nil && x.GasUsed != nil {
		return *x.GasUsed
	}
	return 0
}

func (x *ProtoHeader) GetBaseFee() []byte {
	if x != nil {
		return x.BaseFee
	}
	return nil
}

func (x *ProtoHeader) GetLocation() *common.ProtoLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ProtoHeader) GetTime() uint64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *ProtoHeader) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *ProtoHeader) GetMixHash() *common.ProtoHash {
	if x != nil {
		return x.MixHash
	}
	return nil
}

func (x *ProtoHeader) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

type ProtoTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          *uint64          `protobuf:"varint,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	To            []byte           `protobuf:"bytes,2,opt,name=to,proto3,oneof" json:"to,omitempty"`
	Nonce         *uint64          `protobuf:"varint,3,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`
	Value         []byte           `protobuf:"bytes,4,opt,name=value,proto3,oneof" json:"value,omitempty"`
	GasPrice      []byte           `protobuf:"bytes,5,opt,name=gas_price,json=gasPrice,proto3,oneof" json:"gas_price,omitempty"`
	Gas           *uint64          `protobuf:"varint,6,opt,name=gas,proto3,oneof" json:"gas,omitempty"`
	Data          []byte           `protobuf:"bytes,7,opt,name=data,proto3,oneof" json:"data,omitempty"`
	ChainId       []byte           `protobuf:"bytes,8,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
	GasFeeCap     []byte           `protobuf:"bytes,9,opt,name=gas_fee_cap,json=gasFeeCap,proto3,oneof" json:"gas_fee_cap,omitempty"`
	GasTipCap     []byte           `protobuf:"bytes,10,opt,name=gas_tip_cap,json=gasTipCap,proto3,oneof" json:"gas_tip_cap,omitempty"`
	AccessList    *ProtoAccessList `protobuf:"bytes,11,opt,name=access_list,json=accessList,proto3,oneof" json:"access_list,omitempty"`
	EtxGasLimit   *uint64          `protobuf:"varint,12,opt,name=etx_gas_limit,json=etxGasLimit,proto3,oneof" json:"etx_gas_limit,omitempty"`
	EtxGasPrice   []byte           `protobuf:"bytes,13,opt,name=etx_gas_price,json=etxGasPrice,proto3,oneof" json:"etx_gas_price,omitempty"`
	EtxGasTip     []byte           `protobuf:"bytes,14,opt,name=etx_gas_tip,json=etxGasTip,proto3,oneof" json:"etx_gas_tip,omitempty"`
	EtxData       []byte           `protobuf:"bytes,15,opt,name=etx_data,json=etxData,proto3,oneof" json:"etx_data,omitempty"`
	EtxAccessList *ProtoAccessList `protobuf:"bytes,16,opt,name=etx_access_list,json=etxAccessList,proto3,oneof" json:"etx_access_list,omitempty"`
	V             []byte           `protobuf:"bytes,17,opt,name=v,proto3,oneof" json:"v,omitempty"`
	R             []byte           `protobuf:"bytes,18,opt,name=r,proto3,oneof" json:"r,omitempty"`
	S             []byte           `protobuf:"bytes,19,opt,name=s,proto3,oneof" json:"s,omitempty"`
}

func (x *ProtoTransaction) Reset() {
	*x = ProtoTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransaction) ProtoMessage() {}

func (x *ProtoTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransaction.ProtoReflect.Descriptor instead.
func (*ProtoTransaction) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoTransaction) GetType() uint64 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ProtoTransaction) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ProtoTransaction) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

func (x *ProtoTransaction) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ProtoTransaction) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *ProtoTransaction) GetGas() uint64 {
	if x != nil && x.Gas != nil {
		return *x.Gas
	}
	return 0
}

func (x *ProtoTransaction) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ProtoTransaction) GetChainId() []byte {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *ProtoTransaction) GetGasFeeCap() []byte {
	if x != nil {
		return x.GasFeeCap
	}
	return nil
}

func (x *ProtoTransaction) GetGasTipCap() []byte {
	if x != nil {
		return x.GasTipCap
	}
	return nil
}

func (x *ProtoTransaction) GetAccessList() *ProtoAccessList {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *ProtoTransaction) GetEtxGasLimit() uint64 {
	if x != nil && x.EtxGasLimit != nil {
		return *x.EtxGasLimit
	}
	return 0
}

func (x *ProtoTransaction) GetEtxGasPrice() []byte {
	if x != nil {
		return x.EtxGasPrice
	}
	return nil
}

func (x *ProtoTransaction) GetEtxGasTip() []byte {
	if x != nil {
		return x.EtxGasTip
	}
	return nil
}

func (x *ProtoTransaction) GetEtxData() []byte {
	if x != nil {
		return x.EtxData
	}
	return nil
}

func (x *ProtoTransaction) GetEtxAccessList() *ProtoAccessList {
	if x != nil {
		return x.EtxAccessList
	}
	return nil
}

func (x *ProtoTransaction) GetV() []byte {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *ProtoTransaction) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *ProtoTransaction) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

type ProtoTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*ProtoTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *ProtoTransactions) Reset() {
	*x = ProtoTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransactions) ProtoMessage() {}

func (x *ProtoTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransactions.ProtoReflect.Descriptor instead.
func (*ProtoTransactions) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoTransactions) GetTransactions() []*ProtoTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type ProtoHeaders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers []*ProtoHeader `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
}

func (x *ProtoHeaders) Reset() {
	*x = ProtoHeaders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoHeaders) ProtoMessage() {}

func (x *ProtoHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoHeaders.ProtoReflect.Descriptor instead.
func (*ProtoHeaders) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoHeaders) GetHeaders() []*ProtoHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

type ProtoManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manifest []*common.ProtoHash `protobuf:"bytes,1,rep,name=manifest,proto3" json:"manifest,omitempty"`
}

func (x *ProtoManifest) Reset() {
	*x = ProtoManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoManifest) ProtoMessage() {}

func (x *ProtoManifest) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoManifest.ProtoReflect.Descriptor instead.
func (*ProtoManifest) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoManifest) GetManifest() []*common.ProtoHash {
	if x != nil {
		return x.Manifest
	}
	return nil
}

type ProtoAccessList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessTuples []*ProtoAccessTuple `protobuf:"bytes,1,rep,name=access_tuples,json=accessTuples,proto3" json:"access_tuples,omitempty"`
}

func (x *ProtoAccessList) Reset() {
	*x = ProtoAccessList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAccessList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAccessList) ProtoMessage() {}

func (x *ProtoAccessList) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAccessList.ProtoReflect.Descriptor instead.
func (*ProtoAccessList) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{7}
}

func (x *ProtoAccessList) GetAccessTuples() []*ProtoAccessTuple {
	if x != nil {
		return x.AccessTuples
	}
	return nil
}

type ProtoAccessTuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    []byte              `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StorageKey []*common.ProtoHash `protobuf:"bytes,2,rep,name=storage_key,json=storageKey,proto3" json:"storage_key,omitempty"`
}

func (x *ProtoAccessTuple) Reset() {
	*x = ProtoAccessTuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAccessTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAccessTuple) ProtoMessage() {}

func (x *ProtoAccessTuple) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAccessTuple.ProtoReflect.Descriptor instead.
func (*ProtoAccessTuple) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{8}
}

func (x *ProtoAccessTuple) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *ProtoAccessTuple) GetStorageKey() []*common.ProtoHash {
	if x != nil {
		return x.StorageKey
	}
	return nil
}

var File_core_types_proto_block_proto protoreflect.FileDescriptor

var file_core_types_proto_block_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x7c, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2f,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x29, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x64, 0x79, 0x48,
	0x01, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x81,
	0x02, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x2f, 0x0a, 0x03,
	0x74, 0x78, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x03, 0x74, 0x78, 0x73, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a,
	0x06, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x48, 0x01, 0x52, 0x06, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x31, 0x0a, 0x04, 0x65, 0x74, 0x78, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x02, 0x52, 0x04, 0x65, 0x74, 0x78, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x48, 0x03, 0x52, 0x08, 0x6d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x78,
	0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x65, 0x74, 0x78, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x22, 0xd3, 0x08, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x35, 0x0a, 0x0a, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x00, 0x52,
	0x09, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x01, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48,
	0x02, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x78,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x03,
	0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x08, 0x65,
	0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68,
	0x48, 0x04, 0x52, 0x07, 0x65, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x3e,
	0x0a, 0x0f, 0x65, 0x74, 0x78, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x05, 0x52, 0x0d, 0x65, 0x74,
	0x78, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x36,
	0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48,
	0x06, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x07, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x70, 0x79, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x6f, 0x70, 0x79, 0x12, 0x24, 0x0a,
	0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x53, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x09, 0x67,
	0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x48, 0x08,
	0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x0a, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x0b, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x0c, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x0d, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x69, 0x78,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x0e,
	0x52, 0x07, 0x6d, 0x69, 0x78, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x48, 0x0f, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x6e, 0x63, 0x6c,
	0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x74, 0x78,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x65, 0x74, 0x78, 0x5f, 0x72, 0x6f,
	0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x61,
	0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x61, 0x73, 0x5f,
	0x75, 0x73, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x65,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x69, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0xec, 0x06, 0x0a, 0x10, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x05, 0x52, 0x03, 0x67, 0x61, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x07, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x67, 0x61, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x63,
	0x61, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x08, 0x52, 0x09, 0x67, 0x61, 0x73, 0x46,
	0x65, 0x65, 0x43, 0x61, 0x70, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x67, 0x61, 0x73, 0x5f,
	0x74, 0x69, 0x70, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x09, 0x52,
	0x09, 0x67, 0x61, 0x73, 0x54, 0x69, 0x70, 0x43, 0x61, 0x70, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x0a, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x65,
	0x74, 0x78, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x0b, 0x52, 0x0b, 0x65, 0x74, 0x78, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x65, 0x74, 0x78, 0x5f, 0x67, 0x61, 0x73, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x0c, 0x52, 0x0b, 0x65,
	0x74, 0x78, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0b, 0x65, 0x74, 0x78, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x74, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x0d, 0x52, 0x09, 0x65, 0x74, 0x78, 0x47, 0x61, 0x73, 0x54, 0x69, 0x70, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x74, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x0e, 0x52, 0x07, 0x65, 0x74, 0x78, 0x44, 0x61, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x74, 0x78, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x0f, 0x52, 0x0d, 0x65, 0x74, 0x78, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x11, 0x0a, 0x01, 0x76, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x10, 0x52, 0x01, 0x76, 0x88, 0x01, 0x01, 0x12, 0x11, 0x0a, 0x01, 0x72, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x11, 0x52, 0x01, 0x72, 0x88, 0x01, 0x01, 0x12, 0x11, 0x0a,
	0x01, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x12, 0x52, 0x01, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x74, 0x6f,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x67, 0x61, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x63, 0x61, 0x70,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x63, 0x61, 0x70,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x74, 0x78, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x74, 0x78, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x74, 0x78, 0x5f, 0x67, 0x61, 0x73,
	0x5f, 0x74, 0x69, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x74, 0x78, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x65, 0x74, 0x78, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x04, 0x0a, 0x02, 0x5f, 0x76, 0x42, 0x04, 0x0a, 0x02, 0x5f,
	0x72, 0x42, 0x04, 0x0a, 0x02, 0x5f, 0x73, 0x22, 0x50, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3c, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x3e, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0a,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6e,
	0x74, 0x2d, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x2d,
	0x71, 0x75, 0x61, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_types_proto_block_proto_rawDescOnce sync.Once
	file_core_types_proto_block_proto_rawDescData = file_core_types_proto_block_proto_rawDesc
)

func file_core_types_proto_block_proto_rawDescGZIP() []byte {
	file_core_types_proto_block_proto_rawDescOnce.Do(func() {
		file_core_types_proto_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_types_proto_block_proto_rawDescData)
	})
	return file_core_types_proto_block_proto_rawDescData
}

var file_core_types_proto_block_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_core_types_proto_block_proto_goTypes = []interface{}{
	(*ProtoBlock)(nil),           // 0: block.ProtoBlock
	(*ProtoBody)(nil),            // 1: block.ProtoBody
	(*ProtoHeader)(nil),          // 2: block.ProtoHeader
	(*ProtoTransaction)(nil),     // 3: block.ProtoTransaction
	(*ProtoTransactions)(nil),    // 4: block.ProtoTransactions
	(*ProtoHeaders)(nil),         // 5: block.ProtoHeaders
	(*ProtoManifest)(nil),        // 6: block.ProtoManifest
	(*ProtoAccessList)(nil),      // 7: block.ProtoAccessList
	(*ProtoAccessTuple)(nil),     // 8: block.ProtoAccessTuple
	(*common.ProtoHash)(nil),     // 9: common.ProtoHash
	(*common.ProtoLocation)(nil), // 10: common.ProtoLocation
}
var file_core_types_proto_block_proto_depIdxs = []int32{
	2,  // 0: block.ProtoBlock.header:type_name -> block.ProtoHeader
	1,  // 1: block.ProtoBlock.body:type_name -> block.ProtoBody
	4,  // 2: block.ProtoBody.txs:type_name -> block.ProtoTransactions
	5,  // 3: block.ProtoBody.uncles:type_name -> block.ProtoHeaders
	4,  // 4: block.ProtoBody.etxs:type_name -> block.ProtoTransactions
	6,  // 5: block.ProtoBody.manifest:type_name -> block.ProtoManifest
	9,  // 6: block.ProtoHeader.parent_hash:type_name -> common.ProtoHash
	9,  // 7: block.ProtoHeader.uncle_hash:type_name -> common.ProtoHash
	9,  // 8: block.ProtoHeader.root:type_name -> common.ProtoHash
	9,  // 9: block.ProtoHeader.tx_hash:type_name -> common.ProtoHash
	9,  // 10: block.ProtoHeader.etx_hash:type_name -> common.ProtoHash
	9,  // 11: block.ProtoHeader.etx_rollup_hash:type_name -> common.ProtoHash
	9,  // 12: block.ProtoHeader.manifest_hash:type_name -> common.ProtoHash
	9,  // 13: block.ProtoHeader.receipt_hash:type_name -> common.ProtoHash
	10, // 14: block.ProtoHeader.location:type_name -> common.ProtoLocation
	9,  // 15: block.ProtoHeader.mix_hash:type_name -> common.ProtoHash
	7,  // 16: block.ProtoTransaction.access_list:type_name -> block.ProtoAccessList
	7,  // 17: block.ProtoTransaction.etx_access_list:type_name -> block.ProtoAccessList
	3,  // 18: block.ProtoTransactions.transactions:type_name -> block.ProtoTransaction
	2,  // 19: block.ProtoHeaders.headers:type_name -> block.ProtoHeader
	9,  // 20: block.ProtoManifest.manifest:type_name -> common.ProtoHash
	8,  // 21: block.ProtoAccessList.access_tuples:type_name -> block.ProtoAccessTuple
	9,  // 22: block.ProtoAccessTuple.storage_key:type_name -> common.ProtoHash
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_core_types_proto_block_proto_init() }
func file_core_types_proto_block_proto_init() {
	if File_core_types_proto_block_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_types_proto_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoHeaders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAccessList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAccessTuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_core_types_proto_block_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_core_types_proto_block_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_core_types_proto_block_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_core_types_proto_block_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_types_proto_block_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_types_proto_block_proto_goTypes,
		DependencyIndexes: file_core_types_proto_block_proto_depIdxs,
		MessageInfos:      file_core_types_proto_block_proto_msgTypes,
	}.Build()
	File_core_types_proto_block_proto = out.File
	file_core_types_proto_block_proto_rawDesc = nil
	file_core_types_proto_block_proto_goTypes = nil
	file_core_types_proto_block_proto_depIdxs = nil
}
